version: '3.8'
services:

  nginx:
    image: nginx:1.25-alpine
    container_name: movietopia-nginx
    restart: unless-stopped
    ports:
      - 5500:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/var/www/html
      # Mount config for development
      - ./docker/nginx:/etc/nginx/conf.d:cached
    links:
      - php-fpm
    depends_on:
      - php-fpm
      - db
    networks:
      - movietopia

  php-fpm:
    build: docker/php-fpm
    restart: unless-stopped
    container_name: movietopia-php
    ports:
      - 9000:9000
    extra_hosts:
        - host.docker.internal:host-gateway
    volumes:
      - ./:/var/www/html:cached
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      ENV_SUBSTITUTION_ENABLE: "true"
      PHP_MEMORY_LIMIT: "512M"
      PHP_EXPOSE_PHP: "On"
      PHP_SESSION_GC_MAXLIFETIME: "7200"
      PHP_FPM_ERROR_LOG: "/proc/self/fd/2"
      PHP_FPM_LOG_LEVEL: "error"
    links:
      - db
      - db-test
      - redis
    depends_on:
      - db
      - db-test
    networks:
      - movietopia

  db:
    build: docker/psql
    ports:
      - 11:5432
    container_name: movietopia-db
    restart: unless-stopped
    volumes:
      - ./docker/psql/db-cache:/var/lib/postgresql
    environment:
      - POSTGRES_DB=movietopia
      - POSTGRES_USER=dev_movietopia
      - POSTGRES_PASSWORD=movietopia
    networks:
      - movietopia

  db-test:
    build: docker/psql
    ports:
      - 12:5432
    container_name: movietopia-db-test
    restart: unless-stopped
    volumes:
      - ./docker/psql/db-cache:/var/lib/postgresql
    environment:
      - POSTGRES_DB=movietopia
      - POSTGRES_USER=test_movietopia
      - POSTGRES_PASSWORD=movietopia
    networks:
      - movietopia

  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    container_name: movietopia-redis
    volumes:
      - ./:/var/www/html:cached
    command: redis-server --requirepass secret
    networks:
      - movietopia


  node:
    image: node:20.3.0-alpine3.18
    restart: unless-stopped
    volumes:
      - ./:/var/www/html/
    tty: true
    working_dir: /var/www/html/
    networks:
      - movietopia

networks:
  movietopia:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.204.0/28
